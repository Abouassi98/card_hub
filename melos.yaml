name: card_hub_workspace
repository: https://github.com/Abouassi98/card_hub

packages:
  - packages/**
  - examples/**

    
command:
  version:
    message: |
      Release

      {new_package_versions}
  bootstrap:
    environment:
      sdk: ">=3.4.0 <4.0.0"
      flutter: ">=3.22.0"

    hooks:
      post: |
        melos gen-l10n
        dart pub global activate flutter_asset_generator && melos gen-assets

scripts:
  gen-l10n:
    run: melos exec --flutter --dir-exists=lib/l10n -- "flutter gen-l10n"
    description: Generate localizations for the selected packages.

  gen-assets:
    run: melos run gen-common-assets && melos run gen-apps-assets
    description: Generate assets for all packages.

  gen-common-assets:
    env:
      FILE_NAME_PREFIX: MELOS_PACKAGE_NAME
      CLASS_NAME: "CommonAssets"
    run: melos exec --flutter --dir-exists=assets --scope="common" -- \
      "fgen --no-watch --output lib/gen/${FILE_NAME_PREFIX}_assets.dart --name $CLASS_NAME"
    description: Generate assets for common package.

  gen-apps-assets:
    env:
      FILE_NAME_PREFIX: "my"
      CLASS_NAME: "MyAssets"
    run: melos exec -c 1 --flutter --dir-exists=assets --category="apps" -- \
      "fgen --no-watch --output lib/gen/${FILE_NAME_PREFIX}_assets.dart --name $CLASS_NAME"
    description: Generate assets for apps category.

  generate:
    run: melos run generate:dart && melos run generate:flutter
    description: Build all generated files for all Dart & Flutter packages.

  generate:dart:
    # We are setting the concurrency to 1 because a higher concurrency can crash
    # the analysis server on low performance machines (like GitHub Actions).
    run: melos exec -c 1 --depends-on="build_runner" --no-flutter -- "dart run build_runner build --delete-conflicting-outputs"
    description: Build all generated files for the selected Dart packages.

  generate:flutter:
    run: melos exec -c 1 --depends-on="build_runner" --flutter -- "flutter pub run build_runner build --delete-conflicting-outputs"
    description: Build all generated files for the selected Flutter packages.

  lint:all:
    run: melos run analyze && melos run format
    description: Run all static analysis checks.

  analyze:
    # We are setting the concurrency to 1 because a higher concurrency can crash
    # the analysis server on low performance machines (like GitHub Actions).
    run: |
      # Do not fail on informational lints so CI stays green.
      melos exec -c 1 -- \
        flutter analyze
    description: Run `flutter analyze` for all packages.

  format:
    # Remove --line-length=100 when upgrading the min dart sdk to at least 3.7
    run: melos exec dart format --line-length=100 .
    description: Run `dart format` for all packages.

  test:select:
    run: melos exec --concurrency=1 -- flutter test
    packageFilters:
      dirExists: test
    description: Run `flutter test` for selected packages.

  test:
    run: melos run test:select --no-select
    description: Run all Flutter tests in this project.

  coverage:
    run: |
      melos exec -- flutter test --coverage &&
      # Generate HTML only if genhtml (lcov) is installed; otherwise skip gracefully.
      melos exec -- sh -lc 'command -v genhtml >/dev/null 2>&1 && genhtml coverage/lcov.info --output-directory=coverage/ || echo "genhtml not found; skipping HTML coverage report"'
    packageFilters:
      dirExists: test
    description: Generate coverage for the selected package.

  # Removed golden test scripts

  test:perf:
    run: melos exec --scope="card_hub_test" -- flutter test --tags perf
    packageFilters:
      scope: card_hub_test
    description: Run only performance-tagged tests in card_hub_test.

  # Runs tests one package at a time; useful to avoid Flutter startup lock noise.
  test:serial:
    run: melos exec --concurrency=1 -- flutter test
    packageFilters:
      dirExists: test
    description: Run `flutter test` serially across packages.

  # Generate only the HTML coverage report (requires lcov).
  coverage:html:
    run: melos exec -- sh -lc 'genhtml coverage/lcov.info --output-directory=coverage/'
    packageFilters:
      dirExists: test
    description: Generate only HTML coverage from existing lcov (requires genhtml).

  analyze:strict:
    run: melos exec -c 1 -- flutter analyze --fatal-infos
    description: Strict analyzer run that fails on info-level lints (for CI).

  test:watch:
    run: melos exec --concurrency=1 -- flutter test --watch
    packageFilters:
      dirExists: test
    description: Watch mode tests run serially for better stability.

  clean:
    run: melos exec -- sh -lc 'rm -rf build .dart_tool'
    description: Remove build artifacts across packages (destructive).
